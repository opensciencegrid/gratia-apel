#!/bin/bash
#######################################################
# John Weigand (9/29/08)
#
# Creates an index.html page for the Gratia-APEL
# interface data for each month.
#######################################################
function usage {
  echo "
Usage: $PGM CONFIG_FILE 

      CONFIG_FILE: This is the configuration file (normally lcg.conf)
                   used by the lcg.sh script.

This script will create an index.html file in the WebLocation attribute
directory specified in the CONFIG_FILE specified on the command line.

The files in this directory are generated by the Gratia-APEL interface 
script (LCG.py).

Currently, these files SQL selects of the 3 tables that Gratia has
visibility to:
  OSG_DATA
  org_Tier1
  org_Tier2

In addition, the following data is also presented to assist in 
trouble shooting and in validating WLCG MOU monthly reports:
  HS06_OSG_DATA - includes the HepSpec2006 normalized values used
  late_updates  - show the updates that have occurred after the accounting
                  period (month) is over.  This allows us to confirm if
                  sites have caught up when problems have occurred, to some
                  extent
  missing_data  - shows resource (and days) where no accounting data was
                  found. Also show if planned maintenance was recorded in
                  OIM to account for it.

It is looking for both .html and .xml suffixed files in the format
  YYYY-MM.<table_name>.<xml | html>
" 
}
#--------------------
function logerr { usage;echo "
ERROR: $1
";exit 1 
}
#--------------------
function write_file { echo "$1" >>$index
}
#---------------------
function start { write_file "<$1>"
}
function end { write_file "</$1>"
}
#---------------------
function header { 
  write_file "<TITLE>$1</TITLE>"
  write_file "<HEAD><CENTER><H3>$1</H3></CENTER></HEAD>"
}
#---------------------
function table { write_file "<TABLE $1>"
}
#---------------------
function row { write_file "<TR $1>"
}
#---------------------
function columnHREF { 
    write_file "<TD><CENTER><a href=\"$1\">${formatStart}${2}${formatEnd}</a></CENTER></TD>"
}
#---------------------
function column { 
  if [ -z "$1" ];then
    write_file "<TD $2>.</TD>"
  else
    write_file "<TD $2><CENTER>${formatStart}${1}${formatEnd}</CENTER></TD>"
  fi
}
#---------------------
function text { write_file "$1 "
}
function textbold { write_file "<b>$1 </b>"
}
#---------------------
function font { 
  write_file "<font color=white><b>$1</b></font>"
}
#---------------------
function check_for_file { 
  if [ -f "$1" ];then
    columnHREF "$url/$1" $2
  else
    column "n/a"
  fi
}
#---------------------
function write_description {
 cat >>$index <<EOF
The intent of this page is to provide visibility into the Gratia data that has
been uploaded to the APEL accounting database and from there forwarded to the 
WLCG/EGI portal.
A full description of the Gratia-APEL interface and the tables is the
<a href="https://twiki.grid.iu.edu/bin/view/Accounting/GratiaInterfacesApelLcg">Gratia Interfaces - APEL/WLCG document</a>.
<p>
Prior to $SSM_DATE,
the table below contains SQL 'select' dumps of the APEL accounting database
tables in html and xml format that can be referenced for troubleshooting 
purposes:
<UL>
<TABLE>
<TR>
<TD valign="top"><b>OSG_DATA</b></TD>
<TD>
    This is the table updated by Gratia which is then 
    transferred to the WCLG/EGI portal from which WLCG reports are generated. 
</TD>
</TR><TR>
<TD valign="top"><b>HS06_OSG_DATA</b></TD>
<TD>
    The OSG_DATA table data plus the HepSpec2006 normalized values used 
    since January 2010).<br> 
    Note: The HepSpec2006 factor being used by WLCG is currently 4 times
          the SI2K value.
</TD>
</TR><TR>
<TD valign="top"><b>org_Tier1</b></TD>
<TD>
    Table of Tier 1 resources showing the reporting groups 
    they are a part of and the heirarchy of how they are displayed on the
    EGI portal.
</TD>
</TR><TR>
<TD valign="top"><b>org_Tier2</b></TD>
<TD>
    Table of Tier 2 resources showing the reporting groups 
    they are a part of and the heirarchy of how they are displayed on the
    EGI portal.
</TD> </TR> </TABLE>
</UL>
Beginning in $SSM_DATE,
access to the APEL accounting tables was replaced with an Active/MQ interface
using an SSM protocal.
<UL>
<B>Summary</B> - 
    Shows the summary data (by Resource Group / VO) of the data that was
    sent to APEL/EGI.
</UL>

In addition, there are 2 other views of data shown to assist in trouble
shooting and validating WCLG MOU monthly reports:
<UL>
<TABLE>
<TR>
<TD valign="top"><b>late_updates</b></TD>
<TD>
    Show the updates that have occurred after the 
    accounting period (month) is over.  This allows us to confirm if
    sites have caught up when problems have occurred, to some extent.
</TD>
</TR><TR>
<TD valign="top"><b>missing_data</b></TD>
<TD>
    Shows resource (and days) where no accounting data was
    found. Also show if planned maintenance was recorded in OIM to account 
    for it.
</TD>
</TR></TABLE>
</UL>


<p>
EOF
}
#---------------------
function write_lcg_accounting {
 cat >>$index <<EOF
The Worldwide LHC Computing Grid Accounting reports for Tier-1 and Tier-2 sites
can be seen viewed at the 
<a href="https://espace.cern.ch/WLCG-document-repository/Accounting">
WLCG Accounting site
</a>
<p>
EOF

}
#---------------------
function write_nebraska_description {
 cat >>$index <<EOF
Additional information related to WLCG Tier 1/Tier 2 CMS, ATLAS and ALICE Gratia 
data can be seen at the 
<a href="http://gratiaweb.grid.iu.edu/gratia/wlcg_reporting">OSG WLCG Reporting site</a>.  These pages will
show:
<ol>
<li> WLCG Accounting Summaries</li>
<li> Site Availability Measurements</li>
<li> GIP subcluster data including SpecInt values used</li>
<li> Site normalization factors used</li>
</ol>
<p>
EOF
}
#-----------------------
function validate_args {
  [ ! -f "$cfg" ] && logerr "The configuration file specified does not exist: $cfg"
  WebLocation=`grep "^WebLocation" $cfg |awk '{print $2}'`
  [ -z "$WebLocation" ] && logerr "There is no uncommented WebLocation attribute in $cfg
`grep WebLocation $cfg`
"
  [ ! -d "$WebLocation" ] && logerr "The WebLocation ($WebLocation) specified 
in $cfg does not exist."
  [ ! -w "$WebLocation" ] && logerr "The WebLocation directory ($WebLocation) does not have the correct permissions:
$(ls -ld $WebLocation)
"
}
### MAIN #############################
PGM=$(basename $0)
SSM_DATE="2011-11"
WebLocation=""
url="./"

#---------------------------------
# validate command line arguments 
#---------------------------------
case $1 in
 "\?"               ) usage;exit 1;;
 "-?"    | "--?"    ) usage;exit 1;;
 "-h"    | "--h"    ) usage;exit 1;;
 "-help" | "--help" ) usage;exit 1;;
esac

cfg=$1
validate_args
#--------------------
# Get started
#--------------------
cd $WebLocation
index=$WebLocation/$PGM.tmp.html
rm -f $index

#----------------
# Find the dates
#----------------
dates="$(ls *.dat *.html |egrep -v index.html|cut -d'.' -f1|sort -ur)"

#--------------------------
# Create the index file
#--------------------------
start HTML
header "GRATIA-APEL WLCG Interface"
text "Last updated: $(date)"
start "BODY BGCOLOR=#CCCCCC"
text '<hr width=60%>'
start p
write_description
start p

text '<hr width=60%>'
start p
write_nebraska_description
text '<hr width=60%>'
write_lcg_accounting

#--------------------------------------------
# Create table for files/links 
#--------------------------------------------
text '<hr width=60%>'
text '<b>Gratia-APEL Interface Data</b>'
text '<UL>'
formatStart="<font color=white><b>"
formatEnd="</b></font>"
start "TABLE BORDER=1"
##--- header row --
start "TR BGCOLOR=black"
column "Month"
column "Summary"  "colspan=2"
column "OSG_DATA"  "colspan=2"
column "HS06_OSG_DATA"  "colspan=2"
column "org_Tier1" "colspan=2"
column "org_Tier2" "colspan=2"
column "late updates" "colspan=1"
column "missing days" "colspan=1"
end TR
## -- new row ---
formatStart="<font color=black><b>"
formatEnd="</b></font>"
start "TR BGCOLOR=beige"
for date in $dates
do
  column "$date"
  for table in summary OSG_DATA HS06_OSG_DATA org_Tier1 org_Tier2 
  do
    for type in html dat 
    do
      file=$date.$table.$type
      check_for_file $file $type
    done ## done with type
  done ## done with table
  file=$date.late_updates.html
  check_for_file $file html
  file=$date.missingdays.html
  check_for_file $file html
  end TR
done
end TABLE
text '</UL>'
start p
end body;end html

mv $index index.html
chmod 644 index.html
exit 0
